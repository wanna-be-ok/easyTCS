/* 简易版贪吃蛇，尚存在两个bug 一个是这反爬 一个是 头撞蛇身不死半无敌
2017年8月14日14:28:16
待更新
=============
2017年9月4日17:03:39
尝试修复头撞蛇身问题。解决思路如下：
尝试将蛇身的所有点放到一个数组内，将蛇头的坐标与数组内的数组项进行比较，
如果数组第n（n为双数，及x坐标）与n+1与蛇头相同 及视为头撞蛇身

出现问题：132~136行是比较过程，然而在运行中浏览器崩溃，怀疑原因是内存泄漏，尚未找到解决办法
待更新
=============
修正了 折返爬的问题
改变方向以后 200毫秒内无法再次修改方向（即必须走一步才可以修改方向）

修改了头撞蛇身问题

但仍存在一个问题 在验证机制里
 for(var i=0;i<ck.length;i=i+2){
           if(ck[i]==(z+1)*20 && ck[i+1] ==h*20){
               alert('你撞到了身体');
               clearInterval(cn);
       }
验证办法是下一步的坐标在 身体所在的坐标内就会报错， 但是如果连续顺时针或逆时针转向 （蛇头紧贴蛇身转向）
下一个点的坐标就会穿过蛇身，所以不会报错
2017年9月5日15:57:40
待修正（目前没有思路怎么验证，估计要卡一阵子）
=========================================================
灵感来自去KFC的路上！
“民以食为天”！
修正了头撞蛇身的问题
解决思路：在画出新的蛇头时先验证下一个蛇头的位置是否在蛇身上，如果在将dd设置为false。根据if语句来判断新头
的位置，如果不在执行画新头的函数，如果在停止延迟执行函数 同时报错  
代码如下
function xx(){
       var dd=true;
       for(var i=0;i<ck.length;i=i+2){
           if(ck[i]==z*20 && ck[i+1] ==(h+1)*20){
               dd=false;
           }
       }
       n=0;
      if(dd){
          //向下 远离零点 x即z是不动的 h是不断增大
          h++;
          num=num+2;
          cz(z*20,h*20,e,q);
          if(h==20){
              alert('你输了，请重新开始');
              clearInterval(dn);
              //出界提示失败 同时停止自身计时器
          }
          if(h == xss[g+1] && z==xss[g]){
              g=g+2;
              sz();
              //吃掉目标 刷新目标 增加长度
          }
      }else{
          alert('你撞到了身体');
          clearInterval(dn);
      }
    }

2017年9月5日22:23:03
下次更新就是精简代码，或者更换思路
这次真的等一阵子才更新了
待更新
*/